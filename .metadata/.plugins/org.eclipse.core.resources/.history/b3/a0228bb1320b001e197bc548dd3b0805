package Entidades;

import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.io.IOException;

import javax.imageio.ImageIO;

import main.ControlTeclas;
import main.PanelJuego;

public class Jugador extends Entidad{
	
	PanelJuego pj;
	ControlTeclas teclas;
	
	public final int camaraX;
	public final int camaraY;
	
	int tenerLlave = 0;
	
	public Jugador(PanelJuego pj, ControlTeclas teclas) {
		
		this.pj = pj;
		this.teclas = teclas;
		
		camaraX = pj.anchoPantalla/2 - (pj.tamPantalla/2);
		camaraY = pj.alturaPantalla/2- (pj.tamPantalla/2);
		
		hitBox = new Rectangle();
		hitBox.x = 8;
		hitBox.y = 16;
		hitBoxDefaultX = hitBox.x;
		hitBoxDefaultY = hitBox.y;
		hitBox.width = 32;
		hitBox.height = 32;
		
		setValoresDeterminados();
		getImagenJugador();
	}
	
	public void setValoresDeterminados() {
		
		//RESPAWN JUGADOR
		mundoX = pj.tamPantalla * 8;
		mundoY = pj.tamPantalla * 6;
		velocidad = 4;
		direccion = "abajo";
	}
	//DESCARGA DE IMAGENES
	public void getImagenJugador() {
		
		try {
			
			abajo0 = ImageIO.read(getClass().getResourceAsStream("/jugador/Furro_camina_abajo_0.png"));
			abajo1 = ImageIO.read(getClass().getResourceAsStream("/jugador/Furro_camina_abajo_1.png"));
			abajo2 = ImageIO.read(getClass().getResourceAsStream("/jugador/Furro_camina_abajo_2.png"));
			arriba0 = ImageIO.read(getClass().getResourceAsStream("/jugador/Furro_camina_arriba_0.png"));
			arriba1 = ImageIO.read(getClass().getResourceAsStream("/jugador/Furro_camina_arriba_1.png"));
			arriba2 = ImageIO.read(getClass().getResourceAsStream("/jugador/Furro_camina_arriba_2.png"));
			derecha0 = ImageIO.read(getClass().getResourceAsStream("/jugador/Furro_camina_derecha_0.png"));
			derecha1 = ImageIO.read(getClass().getResourceAsStream("/jugador/Furro_camina_derecha_1.png"));
			derecha2 = ImageIO.read(getClass().getResourceAsStream("/jugador/Furro_camina_derecha_2.png"));
			izquierda0 = ImageIO.read(getClass().getResourceAsStream("/jugador/Furro_camina_izquierda_0.png"));
			izquierda1 = ImageIO.read(getClass().getResourceAsStream("/jugador/Furro_camina_izquierda_1.png"));
			izquierda2 = ImageIO.read(getClass().getResourceAsStream("/jugador/Furro_camina_izquierda_2.png"));

		}
		catch(IOException e) {
			e.printStackTrace();
		}
	}
	
	//CONTROL DE MOVIEMIENTO
	public void actualizar() {
		
		if(teclas.upPresiono == true || teclas.downPresiono == true || 
				teclas.leftPresiono == true || teclas.rightPresiono == true) {
			
			
			if(teclas.upPresiono == true) {
				direccion = "arriba";
			}
			else if(teclas.downPresiono == true) {
				direccion = "abajo";
			}
			else if(teclas.leftPresiono == true) {
				direccion = "izquierda";
			}
			else if(teclas.rightPresiono == true) {
				direccion = "derecha";
			}
			
			//REVISAR LA COLISON DE LAS TILES
			colisionOn = false;
			pj.aColision.revisarTile(this);
			
			//REVISAR LA COLISION CON EL OBJETO
			int objIndex = pj.aColision.revisarObjeto(this, true);
			recogerObjeto(objIndex);
			
			//REVISAR LOS EVENTOS
			pj.cEvento.revisarEvento();
			
			//SI COLISION ES FALSO, EL JUGADOR PUED MOVERSE
			if(colisionOn == false) {
				
				switch(direccion) {
				case "arriba":
					mundoY -= velocidad;
					break;
				case "abajo":
					mundoY += velocidad;
					break;
				case "izquierda":
					mundoX -= velocidad;
					break;
				case "derecha":
					mundoX += velocidad;
					break;
				}
			}
			
			contadorSprite ++;
			if(contadorSprite > 12) {
				if(numSprite == 0) {
					numSprite = 1;
				}
				else if(numSprite == 1) {
					numSprite = 2;
				}
				else if(numSprite == 2) {
					numSprite = 0;
				}
				contadorSprite = 0;
			}
		}
		else {
			numSprite = 1;
		}
	}
	
	public void recogerObjeto(int i) {
		
		if(i != 999) {
			
			String nombreObjeto = pj.obj[i].nombre;
			
			switch(nombreObjeto) {
			case "Llave":
				pj.playSE(2);
				tenerLlave++;
				pj.obj[i] = null;
				break;
			case "Cofre":
				if(tenerLlave > 0) {
					pj.obj[i] = null;
					tenerLlave--;
				}
				break;
			case "Bota":
				velocidad += 1;
				pj.obj[i] = null;
				break;
			}
		}
		
	}
	
	//DIBUJO PERSONAJE
	public void dibujar(Graphics2D g2) {
		
		//g2.setColor(Color.white);
		
		//g2.fillRect(x, y, pj.tamPantalla, pj.tamPantalla);
		
		BufferedImage imagen = null;
		
		switch(direccion) {
		
		case "arriba":
			if(numSprite == 0) {
				imagen = arriba0;
			}
			if(numSprite == 1) {
				imagen = arriba1;
			}
			if(numSprite == 2) {
				imagen = arriba2;
			}
			break;
		case "abajo":
			if(numSprite == 0) {
				imagen = abajo0;
			}
			if(numSprite == 1) {
				imagen = abajo1;
			}
			if(numSprite == 2) {
				imagen = abajo2;
			}
			break;
		case "izquierda":
			if(numSprite == 0) {
				imagen = izquierda0;
			}
			if(numSprite == 1) {
				imagen = izquierda1;
			}
			if(numSprite == 2) {
				imagen = izquierda2;
			}
			break;
		case "derecha":
			if(numSprite == 0) {
				imagen = derecha0;
			}
			if(numSprite == 1) {
				imagen = derecha1;
			}
			if(numSprite == 2) {
				imagen = derecha2;
			}
			break;
		}
		
		
		
		g2.drawImage(imagen, camaraX, camaraY, pj.tamPantalla, pj.tamPantalla, null);
	}
}
